package headsortails;

import java.awt.Desktop;
import java.awt.event.WindowEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author andrewtaylor
 */
public class HeadsOrTailsJFrame extends javax.swing.JFrame {

    private Random random;
    private JFileChooser fileChooser;
    private Logger logger;
    
    /**
     * Creates new form HeadsOrTailsJFrame
     */
    public HeadsOrTailsJFrame() {
        initComponents();
        random = new Random();
        logger = Logger.getLogger(HeadsOrTailsJFrame.class.getName());
        fileChooser = new JFileChooser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        flipCoinPanel = new javax.swing.JPanel();
        flipCoinButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        coinFlipResultsTextArea = new javax.swing.JTextArea();
        headsOrTailsMenuBar = new javax.swing.JMenuBar();
        headsOrTailsFileMenu = new javax.swing.JMenu();
        saveToFileMenuItem = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        quitMenuItem = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        flipCoinButton.setText("Flip Coin");
        flipCoinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flipCoinButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout flipCoinPanelLayout = new javax.swing.GroupLayout(flipCoinPanel);
        flipCoinPanel.setLayout(flipCoinPanelLayout);
        flipCoinPanelLayout.setHorizontalGroup(
            flipCoinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flipCoinPanelLayout.createSequentialGroup()
                .addContainerGap(342, Short.MAX_VALUE)
                .addComponent(flipCoinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(317, 317, 317))
        );
        flipCoinPanelLayout.setVerticalGroup(
            flipCoinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flipCoinPanelLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(flipCoinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        coinFlipResultsTextArea.setColumns(20);
        coinFlipResultsTextArea.setLineWrap(true);
        coinFlipResultsTextArea.setRows(5);
        jScrollPane2.setViewportView(coinFlipResultsTextArea);

        headsOrTailsFileMenu.setText("File");

        saveToFileMenuItem.setText("Save");
        saveToFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToFileMenuItemActionPerformed(evt);
            }
        });
        headsOrTailsFileMenu.add(saveToFileMenuItem);

        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        headsOrTailsFileMenu.add(openMenuItem);

        quitMenuItem.setText("Quit");
        quitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuItemActionPerformed(evt);
            }
        });
        headsOrTailsFileMenu.add(quitMenuItem);

        headsOrTailsMenuBar.add(headsOrTailsFileMenu);

        setJMenuBar(headsOrTailsMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(flipCoinPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flipCoinPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void flipCoinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flipCoinButtonActionPerformed
        int result = random.nextInt(2);
        if (result == 1)
            coinFlipResultsTextArea.append("H");
        else
            coinFlipResultsTextArea.append("T");
    }//GEN-LAST:event_flipCoinButtonActionPerformed

    private void saveToFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToFileMenuItemActionPerformed
        int returnVal = fileChooser.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            logger.log(Level.INFO, "Saving to file: " + file.getName() + ".\n");
            try {
                BufferedWriter writer = new BufferedWriter(new FileWriter(file));
                String text = coinFlipResultsTextArea.getText();
                int numHeads = 0, numTails = 0;
                for (char c : text.toCharArray()) {
                    if (c == 'H')
                        numHeads++;
                    if (c == 'T')
                        numTails++;
                }
                writer.write("Results:\n"+ text + "\nNumber of heads: " + numHeads + "\nNumber of tails: " + numTails + "\n");
                writer.close();
            } catch (IOException ex) {
                logger.log(Level.SEVERE, null, ex);
            }
        } else {
            logger.log(Level.INFO, "Save command cancelled by user.\n");
        }
    }//GEN-LAST:event_saveToFileMenuItemActionPerformed

    private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_quitMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            logger.log(Level.INFO, "Opening file: " + file.getName() + ".\n");
            try {
                Desktop.getDesktop().edit(file);
            } catch (IOException ex) {
                logger.log(Level.SEVERE, null, ex);
            }
        } else {
            logger.log(Level.INFO, "Open command cancelled by user.\n");
        }
    }//GEN-LAST:event_openMenuItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea coinFlipResultsTextArea;
    private javax.swing.JButton flipCoinButton;
    private javax.swing.JPanel flipCoinPanel;
    private javax.swing.JMenu headsOrTailsFileMenu;
    private javax.swing.JMenuBar headsOrTailsMenuBar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem quitMenuItem;
    private javax.swing.JMenuItem saveToFileMenuItem;
    // End of variables declaration//GEN-END:variables
}
